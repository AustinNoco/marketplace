/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import { TTokenStandard, tTokenStandardBeet } from './TTokenStandard'
import { TCollection, tCollectionBeet } from './TCollection'
import { TUses, tUsesBeet } from './TUses'
import {
  TTokenProgramVersion,
  tTokenProgramVersionBeet,
} from './TTokenProgramVersion'
export type TMetadataArgs = {
  name: string
  symbol: string
  uri: string
  sellerFeeBasisPoints: number
  primarySaleHappened: boolean
  isMutable: boolean
  editionNonce: beet.COption<number>
  tokenStandard: beet.COption<TTokenStandard>
  collection: beet.COption<TCollection>
  uses: beet.COption<TUses>
  tokenProgramVersion: TTokenProgramVersion
  creatorShares: Uint8Array
  creatorVerified: boolean[]
}

/**
 * @category userTypes
 * @category generated
 */
export const tMetadataArgsBeet = new beet.FixableBeetArgsStruct<TMetadataArgs>(
  [
    ['name', beet.utf8String],
    ['symbol', beet.utf8String],
    ['uri', beet.utf8String],
    ['sellerFeeBasisPoints', beet.u16],
    ['primarySaleHappened', beet.bool],
    ['isMutable', beet.bool],
    ['editionNonce', beet.coption(beet.u8)],
    ['tokenStandard', beet.coption(tTokenStandardBeet)],
    ['collection', beet.coption(tCollectionBeet)],
    ['uses', beet.coption(tUsesBeet)],
    ['tokenProgramVersion', tTokenProgramVersionBeet],
    ['creatorShares', beet.bytes],
    ['creatorVerified', beet.array(beet.bool)],
  ],
  'TMetadataArgs'
)
